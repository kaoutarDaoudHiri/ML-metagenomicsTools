    "Tools": [
        {
        "name": "Bracken",
        "description": "A highly accurate statistical method that computes the abundance of species in DNA sequences from a metagenomics sample. Bracken uses the taxonomy labels assigned by Kraken, a highly accurate metagenomics classification algorithm, to estimate the number of reads originating from each species present in a sample. Kraken classifies reads to the best matching location in the taxonomic tree, but does not estimate abundances of species. We use the Kraken database itself to derive probabilities that describe how much sequence from each genome is shared with other genomes in the database, and combine this information with the assignments for a particular sample to estimate abundance at the species level, the genus level, or above. Combined with the Kraken classifier, Bracken produces accurate species- and genus-level abundance estimates even when a sample contains multiple near-identical species.",
        "input data": "kraken report",
        "input format": "tsv",
        "output data": "abundance estimates",
        "output format": "tsv",
        "sequence type": "",
        "sequence format": "",
        "read lenght": "short",
        "sequencing" : "",
        "context": "metagenomics",
        "organism":"",
        "tasks": ["Abundance Estimation"]
        },
        {
        "name": "Centrifuge",
        "description": "A rapid and sensitive classifier for microbial sequences with low memory requirements and a speed comparable to the fastest systems. The system uses an indexing scheme based on the Burrows-Wheeler transform (BWT) and the Ferragina-Manzini (FM) index, optimized specifically for the metagenomic classification problem. Centrifuge classifies 10 million reads against a database of all complete prokaryotic and viral genomes within 20 minutes using one CPU core and requiring less than 8GB of RAM. Furthermore, Centrifuge can also build an index for NCBI’s entire nt database of non-redundant sequences from both prokaryotes and eukaryotes. The search requires a computer system with 128 GB of RAM, but runs over 3500 times faster than Megablast.",
        "input data": "sequences",
        "input format": ["fatsa", "fastq", "qseq"],
        "output data": ["classification summary", "alignment metric"],
        "output format": "tsv",
        "sequence type": "DNA",
        "sequence format": "read",
        "read lenght": ["short", "long"],
        "sequencing" : "",
        "context": "metagenomics",
        "organism":"",
        "tasks": ["Classification"]
        },
        {
        "name": "Clark",
        "description": "An approach to classify metagenomic reads at the species or genus level with high accuracy and high speed. Extensive experimental results on various metagenomic samples show that the classification accuracy of CLARK is better or comparable to the best state-of-the-art tools and it is significantly faster than any of its competitors. In its fastest single-threaded mode CLARK classifies, with high accuracy, about 32 million metagenomic short reads per minute. CLARK can also classify BAC clones or transcripts to chromosome arms and centromeric regions.",
        "input data": ["sequences", "database"],
        "input format": ["fasta", "fastq", "text"],
        "output data": "",
        "output format": ["txt", "csv"],
        "sequence type": ["DNA", "RNA"],
        "sequence format": ["reads", "contigs", "scaffolds"],
        "read lenght": ["short", "long"],
        "sequencing" : ["single end", "paired end"],
        "context": ["genomics", "metagenomics"],
        "organism":"",
        "tasks": ["Classification", "Abundance Estimation"]
        },
        {
        "name": "Kodoja",
        "description": "Kodoja is a bioinformatics workflow that takes RNA-seq data files and uses k-mer profiling to identify virus sequences that are present. It combines two existing tools, Kraken for taxonomic classification using k-mers at the nucleotide level and Kaiju for sequence matching at the protein level.",
        "input data": ["sequences", "Kraken k-mer database files", "Kaiju k-mer database file"],
        "input format": ["fasta", "fastq"],
        "output data": "identified virus sequences",
        "output format": "tsv",
        "sequence type": "RNA",
        "sequence format": "",
        "read lenght": ["short", "long"],
        "sequencing" : ["single end", "paired end"],
        "context": "metagenomics",
        "organism":"",
        "tasks": ["virus indentification", "Retreiving reads for specific virus"]
        },
        {
        "name": "Kaiju",
        "description": "A program for the taxonomic classification of metagenomic high-throughput sequencing reads. Each read is directly assigned to a taxon within the NCBI taxonomy by comparing it to a reference database containg microbial and viral protein sequences. By default, Kaiju uses either the available complete genomes from NCBI RefSeq or the microbial subset of the non-redundant protein database nr used by NCBI BLAST, optionally also including fungi and microbial eukaryotes",
        "input data": "HTS reads",
        "input format": ["fasta", "fastq"],
        "output data": "Taxonomic classification",
        "output format": "tsv",
        "sequence type": "DNA",
        "sequence format": "",
        "read lenght": ["short", "long"],
        "sequencing" : ["single end", "paired end"],
        "context": ["metagenomics", "phylogenetics", "Nucleotide sequence alignment"],
        "organism":"",
        "tasks": ["Classification", "", ""]
        },
        {
        "name": "Kraken",
        "description": "Allows analysis of next-generation sequencing datasets. Kraken is a suite of tools that encompasses adapter contaminant detection and removal, and cleaning of low-complexity and low-quality sequence tracts and other contaminants arising from sample preparation. The software can handle multiplexed data, recognize common read geometries, produce reports, plots and summary statistics, and process several FASTQ files in parallel",
        "input data": ["sequences", "database"],
        "input format": ["fasta", "fastq", "gzip", "bzip2"],
        "output data": "Taxonomic classification",
        "output format": "tsv",
        "sequence type": "RNA",
        "sequence format": "",
        "read lenght": "short",
        "sequencing" : ["single end", "paired end"],
        "context": ["metagenomics", "phylogenetics", "WGS analysis", "Nucleotide sequence alignment"],
        "organism":"",
        "tasks": ["Classfication", "", ""]
        },
        {
        "name": "Magic-BLAST",
        "description": "Allows users to map next-generation RNA or DNA sequencing runs against a whole transcriptome or genome. Magic-BLAST processes with each alignment performing an optimization of a composite score. This score considers in a simultaneous way the two reads of a pair and locates the candidate introns and the score of all exons in the case of RNA-seq. This tool facilitates integration with other NCBI tools and recognizes NCBI accessions for sequence read archive (SRA) reads, mRNA or genomic sequences.",
        "input data": "HTS reads",
        "input format": ["SRA","fasta", "fastq"],
        "output data": "alignments",
        "output format": ["SAM", "tsv"],
        "sequence type": ["DNA", "RNA"],
        "sequence format": "",
        "read lenght": ["short", "long"],
        "sequencing" : ["single end", "paired end"],
        "context": "metagenomics",
        "organism":"",
        "tasks": ["mapping", "", ""]
        },
        {
        "name": "Marvel",
        "description": "a tool for recovery of draft phage genomes from whole community shotgun metagenomic sequencing data.",
        "input data": "metagenomic bins",
        "input format": "fasta",
        "output data": "predictions of phage bins",
        "output format": "",
        "sequence type": "DNA",
        "sequence format": ["bins", "reads"],
        "read lenght": "long",
        "sequencing" : ["single end", "paired end"],
        "context": "metagenomics",
        "organism":"bacteriophage",
        "tasks": ["classification", "", ""]
        },
        {
        "name": "MGmapper",
        "description": "Simplifies the processing of next generation sequences from biological samples. MGmapper provides an access for routine analysis of complex datasets, enabling usage of many whole genome reference sequence databases like bacteria, virus, fungi, plant, vertebrate-mammals, and invertebrates. This package also enables the usage of gene databases like anti-microbial resistance genes, 16S rRNA or any custom database based on a set of fasta sequences.",
        "input data": "sequences",
        "input format": "fastq",
        "output data": ["alignments", "annotations"],
        "output format": ["BAM", "txt", "xls"],
        "sequence type": "DNA",
        "sequence format": "",
        "read lenght": "short",
        "sequencing" : ["single end", "paired end"],
        "context": ["genome annotation", "phylogenetics", "metagenomics"],
        "organism":"many",
        "tasks": ["mapping", "", ""]
        },
        {
        "name": "SMART",
        "description": "",
        "input data": "",
        "input format": "",
        "output data": "annotations",
        "output format": ["json", "tsv", "fastq"],
        "sequence type": ["DNA", "RNA"],
        "sequence format": "",
        "read lenght": "short",
        "sequencing" : "",
        "context": "metagenomics",
        "organism":"many",
        "tasks": ["classification", ""]
        },
        {
        "name": "Virsorter",
        "description": "Represents a scalable and community-available tool for detecting and identifying viral genome sequences from diverse microbial datasets. Its performance for prophage prediction is largely comparable to that of available prophage prediction tools when applied to complete microbial genomes, but it outperforms available tools when making predictions from modern microbial datasets which tend to be fragmented and larger-scale or when searching for viruses beyond those “known” in current databases. Thus, VirSorter complements existing tools to help elucidate bacterial and archaeal viral sequences among myriad modern microbial genomic data types. VirSorter is made available through the iPlant Cyberinfrastructure that provides a web-based user interface interconnected with the required computing resources",
        "input data": "microbial genome",
        "input format": "fasta",
        "output data": ["viral sequences" ,"annotations"],
        "output format": ["fasta", "genbank", "csv"],
        "sequence type": "DNA",
        "sequence format": "",
        "read lenght": "short",
        "sequencing" : ["single end", "paired end"],
        "context": ["metagenomics", "Nucleotide sequence alignment", "phylogenetics", "genome annotation"],
        "organism":"microbes",
        "tasks": ["virus detection", "virus identification", ""]
        },
        {
        "name": "VirusDetect",
        "description": "analyze large-scale sRNA datasets for virus identification. The program performs reference-guided assembly by aligning sRNA reads to the known virus reference database (GenBank gbvrl) as well as de novo assembly using Velvet with automated parameter optimization. The assembled contigs are compared to the reference virus sequences for virus identification. The contigs were treated as undetermined contigs if they are not hit to any known viruses. The siRNA profile of these undetermined contigs are provided as guidance to discovery novel viruses which do not show sequence similarity with known viruses.",
        "input data": "sRNA sequences",
        "input format": ["fastq", "fastq"],
        "output data": "viral contigs",
        "output format": ["fasta", "blastn", "blastx","xls", "sam"],
        "sequence type": "RNA",
        "sequence format": "",
        "read lenght": ["short", "long"],
        "sequencing" : "single read",
        "context": "metagenomics",
        "organism":"many",
        "tasks": ["virus identification", "", ""]
        },
        {
        "name": "VirFinder",
        "description": "Identifies prokaryotic viral sequences from metagenomic data. VirFinder is a k-mer based program using machine learning methods to identify sequence signatures. It distinguishes viral sequences from host sequences, and as a result, constructs a scoring system to predict viral sequences based on sequence signatures. It was developed to find and analyze viral sequences in human gut metagenomic data from healthy and liver cirrhosis patients.",
        "input data": "contigs",
        "input format": "fasta",
        "output data": "viral sequences",
        "output format": "stout",
        "sequence type": "DNA",
        "sequence format": "",
        "read lenght": ["short", "long"],
        "sequencing" : ["single end", "paired end"],
        "context": "metagenomics",
        "organism":"human",
        "tasks": ["virus identification", "", ""]
        },
        {
        "name": "Diamond",
        "description": "An alignment tool for aligning short DNA sequencing reads to a protein reference database such as NCBI nonredundant (NCBI-nr). On Illumina reads of length 100-150bp, in fast mode, DIAMOND is about 20,000 times faster than BLASTX, while reporting about 80-90% of all matches that BLASTX finds, with an e-value of at most 1e-5. In sensitive mode, DIAMOND is about 2,500 times faster than BLASTX, finding more than 94% of all matches.",
        "input data": "",
        "input format": "fasta",
        "output data": ["alignments", "taxonomic classification"],
        "output format": ["BLAST pairwise", "tsv", "xml"],
        "sequence type": "DNA",
        "sequence format": "",
        "read lenght": "long",
        "sequencing" : "",
        "context": "metagenomics",
        "organism":"",
        "tasks": ["alignment", "classification", ""]
        },

        {
        "name": "",
        "description": "",
        "input data": "",
        "input format": "",
        "output data": "",
        "output format": "",
        "sequence type": "",
        "sequence format": "",
        "read lenght": "",
        "sequencing" : "",
        "context": "",
        "organism":"",
        "tasks": ["", "", ""]
        }

        ]
